################################################################################
# CREDS File: Store private information. Copied to creds.env and always ignored
################################################################################
# Nautobot Configuration Secret Items
NAUTOBOT_CREATE_SUPERUSER=true
NAUTOBOT_DB_PASSWORD=changeme
NAUTOBOT_NAPALM_USERNAME=''
NAUTOBOT_NAPALM_PASSWORD=''
NAUTOBOT_REDIS_PASSWORD=changeme
NAUTOBOT_SECRET_KEY='changeme'
NAUTOBOT_SUPERUSER_NAME=admin
NAUTOBOT_SUPERUSER_EMAIL=admin@example.com
NAUTOBOT_SUPERUSER_PASSWORD=admin
NAUTOBOT_SUPERUSER_API_TOKEN=0123456789abcdef0123456789abcdef01234567

# Postgres
POSTGRES_PASSWORD=${NAUTOBOT_DB_PASSWORD}
PGPASSWORD=${NAUTOBOT_DB_PASSWORD}

# MySQL Credentials
MYSQL_ROOT_PASSWORD=${NAUTOBOT_DB_PASSWORD}
MYSQL_PASSWORD=${NAUTOBOT_DB_PASSWORD}

# Use these to override values in development.env
# NAUTOBOT_DB_HOST=localhost
# NAUTOBOT_REDIS_HOST=localhost
# NAUTOBOT_CONFIG=development/nautobot_config.py

################################################################################
# Azure Key Vault Environment Variables
# https://learn.microsoft.com/en-us/python/api/azure-identity/azure.identity.defaultazurecredential?view=azure-python
# https://learn.microsoft.com/en-us/python/api/azure-identity/azure.identity.environmentcredential?view=azure-python
#  
# TLDR; Set up a Service Principal, grant it "Key Vault Secrets User" role, add Service Principal
# details to the environment variables below.

AZURE_TENANT_ID=''
AZURE_CLIENT_ID=''

AZURE_CLIENT_SECRET=''

# AZURE_CLIENT_CERTIFICATE_PATH=''
# AZURE_CLIENT_CERTIFICATE_PASSWORD=''

################################################################################
# Delinea/Thycotic Secret Server Environment Variables
#     https://github.com/DelineaXPM/python-tss-sdk

SECRET_SERVER_BASE_URL='https://pw.example.local/SecretServer'

# SECRET_SERVER_IS_CLOUD_BASED: (optional) Set to 'True' if you access a
#     cloud based service. (Default: 'False' on-prem)         
# SECRET_SERVER_IS_CLOUD_BASED='False'

# Tenant is required when SECRET_SERVER_IS_CLOUD_BASED == True
# SECRET_SERVER_TENANT=''

# Specify either username and password or token. If both are defined,
# username and password will be used for authentication
# Username | Password | Token | Domain | Authorizer
#   def    |    def   |   *   |   -    | PasswordGrantAuthorizer
#   def    |    def   |   *   |  def   | DomainPasswordGrantAuthorizer
#    *     |    *     |  def  |   -    | AccessTokenAuthorizer
SECRET_SERVER_USERNAME=''
SECRET_SERVER_PASSWORD=''
# SECRET_SERVER_TOKEN=''
# SECRET_SERVER_DOMAIN=''

# REQUESTS_CA_BUNDLE (optional)
#     Specify the trusted certificates file path for self signed certificates
#     e.g. '/etc/ssl/certs/ca-bundle.trust.crt'
# REQUESTS_CA_BUNDLE='/etc/ssl/certs/ca-bundle.trust.crt'

################################################################################
# HashiCorp Vault Environment Variables

HASHICORP_VAULT_URL=''
HASHICORP_VAULT_TOKEN=''

################################################################################