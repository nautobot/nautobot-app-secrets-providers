[tool.poetry]
name = "nautobot-secrets-providers"
version = "2.0.0rc2"
description = "Nautobot Secrets Providers App"
authors = ["Network to Code, LLC <opensource@networktocode.com>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/nautobot/nautobot-plugin-secrets-providers"
repository = "https://github.com/nautobot/nautobot-plugin-secrets-providers"
keywords = ["nautobot", "nautobot-plugin"]
include = [
    "LICENSE",
    "README.md",
]
packages = [
    { include = "nautobot_secrets_providers" },
]

[tool.poetry.dependencies]
boto3 = { version = "~1.19.5", optional = true }
hvac = { version = ">=0.11.0, <1.1.0", optional = true }
nautobot = { version = ">=2.0.0-rc.1", optional = true }
python = ">=3.8,<3.12"
python-tss-sdk = {version = "~1.2.0", optional = true}


[tool.poetry.dev-dependencies]
Markdown = "*"
bandit = "*"
black = "*"
coverage = "*"
django-debug-toolbar = "*"
# we need to pin flake8 because of package dependencies that cause it to downgrade and
# therefore cause issues with linting since older versions do not take .flake8 as config
flake8 = "^3.9.2"
griffe = "0.30.1"               # Last version with python 3.7 support
invoke = "*"
mkdocs = "1.4.3"
mkdocs-material = "9.1.15"
mkdocs-version-annotations = "1.0.0"
mkdocstrings = "0.22.0"         # Last version with python 3.7 support
mkdocstrings-python = "1.1.2"   # Last version with python 3.7 support
moto = "~2.2.11"
pyOpenSSL = "23.2.0"
pydocstyle = "*"
pylint = "*"
pylint-django = "*"
pylint-nautobot = "*"
python-dotenv = "^0.21.1"
requests-mock = "1.9.3"
toml = "*"
yamllint = "*"

[tool.poetry.extras]
all = [
    "boto3",
    "hvac",
    "python-tss-sdk",
]
aws = ["boto3"]
hashicorp = ["hvac"]
nautobot = ["nautobot"]
thycotic = ["python-tss-sdk"]

[tool.black]
line-length = 120
target-version = ['py37']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | settings.py     # This is where you define files that should not be stylized by black
                     # the root of the project
)
'''

[tool.pylint.master]
# Include the pylint_django plugin to avoid spurious warnings about Django patterns
load-plugins = [
    "pylint_django",
    "pylint_nautobot",
]
# Ignore migrations and tests
ignore = [
    ".venv",
    ".*/tests/*",
    ".*/migrations/*",
]

[tool.pylint.basic]
# No docstrings required for private methods (Pylint default), or for test_ functions, or for inner Meta classes.
no-docstring-rgx="^(_|test_|Meta$)"

[tool.pylint.messages_control]
# Line length is enforced by Black, so pylint doesn't need to check it.
# Pylint and Black disagree about how to format multi-line arrays; Black wins.
disable = """,
    line-too-long,
    """

[tool.pylint.miscellaneous]
# Don't flag TODO as a failure, let us commit with things that still need to be done in the code
notes = """,
    FIXME,
    XXX,
    """

[tool.pylint-nautobot]
supported_nautobot_versions = [
    "2",  # Supporting 2.x.y
]

[tool.pydocstyle]
convention = "google"
inherit = false
match = "(?!__init__).*\\.py"
match-dir = "(?!tests|migrations|development)[^\\.].*"
# D212 is enabled by default in google convention, and complains if we have a docstring like:
# """
# My docstring is on the line after the opening quotes instead of on the same line as them.
# """
# We've discussed and concluded that we consider this to be a valid style choice.
add_ignore = "D212"

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
