[tool.poetry]
name = "nautobot-secrets-providers"
version = "0.1.0"
description = "Nautobot Secrets Providers Plugin."
authors = ["Network to Code, LLC <opensource@networktocode.com>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/nautobot/nautobot-plugin-secrets-providers"
repository = "https://github.com/nautobot/nautobot-plugin-secrets-providers"
keywords = ["nautobot", "nautobot-plugin"]
include = [
    "LICENSE",
    "README.md",
]
packages = [
    { include = "nautobot_secrets_providers" },
]

[tool.poetry.dependencies]
python = "^3.6"

# Used for local development (Pin this to the lowest supported version of Nautobot)
# FIXME(jathan): Uncomment the next line and remove this FIXME before public release.
# nautobot = { version = "1.2.0", optional = true }
# Temporarily pull Nautobot explicitly from `next` branch for plugin development. 
# FIXME(jathan): Remove this FIXME and following line before public release.
nautobot = { git = "https://github.com/nautobot/nautobot.git", branch = "gfm-secrets" }

#
# Optional dependencies installed as extras
# 

# AWS SDK for Python
boto3 = { version = "~1.19.5", optional = true }
# HashiCorp Vault API Client
hvac = { version = "~0.11.0", optional = true }

[tool.poetry.dev-dependencies]
bandit = "*"
black = "*"
coverage = "*"
django-debug-toolbar = "*"
flake8 = "*"
invoke = "*"
moto = "^2.2.11"
mkdocs = "*"
pydocstyle = "*"
pylint = "*"
pylint-django = "*"
yamllint = "*"

[tool.poetry.extras]
aws = ["boto3"]
hashicorp = ["hvac"]
nautobot = ["nautobot"]

[tool.black]
line-length = 120
target-version = ['py37']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | settings.py     # This is where you define files that should not be stylized by black
                     # the root of the project
)
'''

[tool.pylint.master]
# Include the pylint_django plugin to avoid spurious warnings about Django patterns
load-plugins="pylint_django"

[tool.pylint.basic]
# No docstrings required for private methods (Pylint default), or for test_ functions, or for inner Meta classes.
no-docstring-rgx="^(_|test_|Meta$)"

[tool.pylint.messages_control]
# Line length is enforced by Black, so pylint doesn't need to check it.
# Pylint and Black disagree about how to format multi-line arrays; Black wins.
disable = """,
    line-too-long,
    bad-continuation,
    """

[tool.pylint.miscellaneous]
# Don't flag TODO as a failure, let us commit with things that still need to be done in the code
notes = """,
    FIXME,
    XXX,
    """

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = [
    "tests"
]
addopts = "-vv --doctest-modules"
